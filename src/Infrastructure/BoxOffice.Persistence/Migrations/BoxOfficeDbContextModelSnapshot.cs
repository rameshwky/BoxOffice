// <auto-generated />
using System;
using BoxOffice.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoxOffice.Persistence.Migrations
{
    [DbContext(typeof(BoxOfficeDbContext))]
    partial class BoxOfficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoxOffice.Domain.Entities.ActedMovie", b =>
                {
                    b.Property<Guid>("ActorId");

                    b.Property<Guid>("MovieId");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("ActedMovies");
                });

            modelBuilder.Entity("BoxOffice.Domain.Entities.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(800)
                        .IsUnicode(false);

                    b.Property<DateTime>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("BoxOffice.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Plot")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Poster");

                    b.Property<Guid>("ProducerId");

                    b.Property<int>("YearOfRelease");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("BoxOffice.Domain.Entities.Producer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("BoxOffice.Domain.Entities.ActedMovie", b =>
                {
                    b.HasOne("BoxOffice.Domain.Entities.Actor", "Actor")
                        .WithMany("ActedMovies")
                        .HasForeignKey("ActorId")
                        .HasConstraintName("FK_ActedMovie_Actor");

                    b.HasOne("BoxOffice.Domain.Entities.Movie", "Movie")
                        .WithMany("ActedMovies")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_ActedMovie_Movie");
                });

            modelBuilder.Entity("BoxOffice.Domain.Entities.Movie", b =>
                {
                    b.HasOne("BoxOffice.Domain.Entities.Producer", "Producer")
                        .WithMany("Movie")
                        .HasForeignKey("ProducerId")
                        .HasConstraintName("FK_Movie_Producer");
                });
#pragma warning restore 612, 618
        }
    }
}
